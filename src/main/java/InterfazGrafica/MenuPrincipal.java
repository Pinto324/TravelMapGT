/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import ArbolB.ArbolB;
import ArbolB.NodoArbolB;
import Grafos.NodoRecorridoDeGrafo;
import Objetos.Vertices;
import Utilidades.Graficador;
import Utilidades.ManejadorDeArchivos;
import Utilidades.ManejadorDelCalculos;
import Utilidades.ManejadorDelGrafo;
import UtilidadesGUI.Personalizacion;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalTime;
import java.util.*;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileSystemView;

public class MenuPrincipal extends javax.swing.JFrame implements Runnable {

    private String  Origen, Destino;
    private Thread h1;
    private HashSet<String> visitados;
    private boolean Modo = true, ModoFiltro = true, enViaje = false, relojSigue = true;
    private ArrayList<Vertices> Grafo;
    private ArrayList<NodoArbolB> NodosOrdenados;
    private LocalTime Hora;

    public MenuPrincipal() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        h1 = new Thread(this);
        h1.start();
        LabelModo.setText("Vehículo");
        LabelModoFiltro.setText("Mejor");
        setVisible(true);
        ComboBoxFiltro.addItem("Según gasto");
        ComboBoxFiltro.addItem("Según Distancia");
        ComboBoxFiltro.addItem("Según gasto y Distancia");
        ComboBoxFiltro.addItem("Según Rapidez");
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        // Establece el aspecto del JFileChooser según el estilo del sistema operativo
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        PanelMapa = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LabelMapa = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxOrigen = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxDestino = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonCM = new javax.swing.JButton();
        jButtonAR = new javax.swing.JButton();
        jButtonAT = new javax.swing.JButton();
        jButtonC = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        LabelModo = new javax.swing.JLabel();
        LabelCantidad = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ComboBoxFiltro = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxRuta = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        LabelModoFiltro = new javax.swing.JLabel();
        ButtonModoFiltro = new javax.swing.JButton();
        ButtonMoverseSiguiente = new javax.swing.JButton();
        LabelReloj = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonSubirMinuto = new javax.swing.JButton();
        jButtonBajarMinuto = new javax.swing.JButton();
        jButtonSubirHora = new javax.swing.JButton();
        jButtonBajarHora = new javax.swing.JButton();
        jButtonParar = new javax.swing.JButton();
        jButtonSeguir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Travel Map GT");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(659, 659, 659)
                .addComponent(jLabel2)
                .addContainerGap(889, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelMapa.setBackground(new java.awt.Color(204, 204, 204));

        LabelMapa.setMaximumSize(new java.awt.Dimension(918, 460));
        jScrollPane1.setViewportView(LabelMapa);

        javax.swing.GroupLayout PanelMapaLayout = new javax.swing.GroupLayout(PanelMapa);
        PanelMapa.setLayout(PanelMapaLayout);
        PanelMapaLayout.setHorizontalGroup(
            PanelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMapaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelMapaLayout.setVerticalGroup(
            PanelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jComboBoxOrigen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxOrigenItemStateChanged(evt);
            }
        });
        jComboBoxOrigen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxOrigenFocusLost(evt);
            }
        });
        jComboBoxOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOrigenActionPerformed(evt);
            }
        });

        jLabel1.setText("Origen");

        jComboBoxDestino.setEnabled(false);
        jComboBoxDestino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDestinoItemStateChanged(evt);
            }
        });
        jComboBoxDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDestinoActionPerformed(evt);
            }
        });

        jLabel3.setText("Destino");

        jButtonCM.setText("Cambiar Modo");
        jButtonCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCMActionPerformed(evt);
            }
        });

        jButtonAR.setText("Agregar Rutas");
        jButtonAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonARActionPerformed(evt);
            }
        });

        jButtonAT.setText("Agregar Trafico");
        jButtonAT.setEnabled(false);
        jButtonAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonATActionPerformed(evt);
            }
        });

        jButtonC.setText("Calcular Viaje");
        jButtonC.setEnabled(false);
        jButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jLabel5.setText("Modo:");

        LabelModo.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabelModo.setText("?");

        jLabel9.setText("Medición:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(jLabel3))
                                .addComponent(jComboBoxOrigen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LabelModo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(LabelCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButtonC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelModo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAR)
                .addGap(13, 13, 13)
                .addComponent(jButtonAT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCM)
                .addGap(60, 60, 60))
        );

        ComboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxFiltroItemStateChanged(evt);
            }
        });
        ComboBoxFiltro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ComboBoxFiltroFocusLost(evt);
            }
        });
        ComboBoxFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFiltroActionPerformed(evt);
            }
        });

        jLabel6.setText("Seleccionar Filtro:");

        jLabel7.setText("Seleccionar Ruta:");

        ComboBoxRuta.setEnabled(false);
        ComboBoxRuta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxRutaItemStateChanged(evt);
            }
        });
        ComboBoxRuta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ComboBoxRutaFocusLost(evt);
            }
        });
        ComboBoxRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxRutaActionPerformed(evt);
            }
        });

        jLabel8.setText("Modo de Filtro:");

        LabelModoFiltro.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabelModoFiltro.setText("?");

        ButtonModoFiltro.setText("Cambiar Modo Filtro");
        ButtonModoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonModoFiltroActionPerformed(evt);
            }
        });

        ButtonMoverseSiguiente.setText("Moverse al siguiente lugar");
        ButtonMoverseSiguiente.setEnabled(false);
        ButtonMoverseSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMoverseSiguienteActionPerformed(evt);
            }
        });

        LabelReloj.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabelReloj.setText("?");

        jLabel4.setText("Tiempo:");

        jButtonSubirMinuto.setText("/\\");
            jButtonSubirMinuto.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonSubirMinutoActionPerformed(evt);
                }
            });

            jButtonBajarMinuto.setText("\\/");
            jButtonBajarMinuto.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonBajarMinutoActionPerformed(evt);
                }
            });

            jButtonSubirHora.setText("/\\");
                jButtonSubirHora.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonSubirHoraActionPerformed(evt);
                    }
                });

                jButtonBajarHora.setText("\\/");
                jButtonBajarHora.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonBajarHoraActionPerformed(evt);
                    }
                });

                jButtonParar.setText("■");
                jButtonParar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonPararActionPerformed(evt);
                    }
                });

                jButtonSeguir.setText("|>");
                jButtonSeguir.setEnabled(false);
                jButtonSeguir.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonSeguirActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ComboBoxRuta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(ButtonModoFiltro)
                                .addContainerGap(40, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(jButtonBajarHora)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButtonBajarMinuto))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(jButtonSubirHora)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButtonSubirMinuto)))
                                            .addGap(2, 2, 2)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButtonParar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonSeguir))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(LabelModoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(ButtonMoverseSiguiente)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(ComboBoxFiltro, 0, 205, Short.MAX_VALUE)
                            .addContainerGap()))
                );
                jPanel2Layout.setVerticalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelModoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonModoFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSubirMinuto)
                            .addComponent(jButtonSubirHora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonBajarMinuto)
                            .addComponent(jButtonBajarHora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonParar)
                            .addComponent(jButtonSeguir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonMoverseSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(61, 61, 61)
                            .addComponent(ComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(387, Short.MAX_VALUE)))
                );

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PanelMapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(2, 2, 2))
                );
                jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PanelMapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1860, javax.swing.GroupLayout.PREFERRED_SIZE)
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                pack();
            }// </editor-fold>//GEN-END:initComponents

    private void jButtonCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCMActionPerformed
        if (Modo) {
            Modo = false;
            LabelModo.setText("Caminando");
        } else {
            Modo = true;
            LabelModo.setText("Vehículo");
        }
        if (enViaje) {
            ActualizarMapa();
        }
    }//GEN-LAST:event_jButtonCMActionPerformed

    private void jButtonARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonARActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int seleccion = fileChooser.showOpenDialog(MenuPrincipal.this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            //
            Grafo = ManejadorDeArchivos.leerArchivo(archivo.getAbsolutePath());
            Graficador.SacarCadenas(Grafo);
            ActivarComboOrigen();
            ActualizarImagenMapa();
            jButtonAT.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonARActionPerformed

    private void jButtonATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonATActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int seleccion = fileChooser.showOpenDialog(MenuPrincipal.this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            ManejadorDeArchivos.leerArchivoTrafico(archivo.getAbsolutePath(), Grafo);
            jButtonAT.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Se asignó el trafico a las rutas");
        }
    }//GEN-LAST:event_jButtonATActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCActionPerformed
        Origen = jComboBoxOrigen.getItemAt(jComboBoxOrigen.getSelectedIndex());
        Destino = jComboBoxDestino.getItemAt(jComboBoxDestino.getSelectedIndex());
        enViaje = true;
        ActualizarMapa();
        if (!NodosOrdenados.isEmpty()) {
            if (ModoFiltro) {
                if (ComboBoxFiltro.getSelectedIndex() == 3) {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                } else {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));
                }
            } else {
                if (ComboBoxFiltro.getSelectedIndex() == 3) {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));
                } else {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                }
            }
        }else{
            enViaje = false;
        }
    }//GEN-LAST:event_jButtonCActionPerformed

    private void jComboBoxOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrigenActionPerformed
        ActivarCombDestino(jComboBoxOrigen.getItemAt(jComboBoxOrigen.getSelectedIndex()));
        jComboBoxDestino.setEnabled(true);
    }//GEN-LAST:event_jComboBoxOrigenActionPerformed

    private void jComboBoxOrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOrigenItemStateChanged

    }//GEN-LAST:event_jComboBoxOrigenItemStateChanged

    private void jComboBoxDestinoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDestinoItemStateChanged

    }//GEN-LAST:event_jComboBoxDestinoItemStateChanged

    private void jComboBoxOrigenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxOrigenFocusLost

    }//GEN-LAST:event_jComboBoxOrigenFocusLost

    private void ComboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxFiltroItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxFiltroItemStateChanged

    private void ComboBoxFiltroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComboBoxFiltroFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxFiltroFocusLost

    private void ComboBoxFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFiltroActionPerformed
        if (enViaje) {
            if (ComboBoxRuta.getSelectedIndex() != -1) {
                ActualizarMapa();

                int entero = ComboBoxFiltro.getSelectedIndex();
                if (ModoFiltro) {
                    if (ComboBoxFiltro.getSelectedIndex() == 3) {
                        LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                    } else {
                        LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));
                    }
                } else {
                    if (ComboBoxFiltro.getSelectedIndex() == 3) {
                        LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));
                    } else {
                        LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                    }
                }
            }
        }
    }//GEN-LAST:event_ComboBoxFiltroActionPerformed

    private void ComboBoxRutaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxRutaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxRutaItemStateChanged

    private void ComboBoxRutaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComboBoxRutaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxRutaFocusLost

    private void ComboBoxRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxRutaActionPerformed
        if (ComboBoxRuta.getSelectedIndex() != -1) {
            int entero = ComboBoxRuta.getSelectedIndex();
            if (ModoFiltro) {
                if (ComboBoxFiltro.getSelectedIndex() == 3) {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                } else {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));
                }
            } else {
                if (ComboBoxFiltro.getSelectedIndex() == 3) {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getCalculo()));

                } else {
                    LabelCantidad.setText(String.valueOf(NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getCalculo()));
                }

            }
        }

    }//GEN-LAST:event_ComboBoxRutaActionPerformed

    private void ButtonMoverseSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMoverseSiguienteActionPerformed
        if (ModoFiltro) {
            if (ComboBoxFiltro.getSelectedIndex() == 3) {
                Origen = NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getRecorrido().get(1);
            } else {
                Origen = NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getRecorrido().get(1);
            }
        } else {
            if (ComboBoxFiltro.getSelectedIndex() == 3) {
                Origen = NodosOrdenados.get(NodosOrdenados.size() - 1 - ComboBoxRuta.getSelectedIndex()).getRecorrido().get(1);
            } else {
                Origen = NodosOrdenados.get(ComboBoxRuta.getSelectedIndex()).getRecorrido().get(1);
            }
        }
        if (RevisarSiLlego()) {
            JOptionPane.showMessageDialog(null, "En hora buena! llegaste a tu destino");
            Graficador.SacarCadenas(Grafo);
            ActivarComboOrigen();
            ActualizarImagenMapa();
            ButtonMoverseSiguiente.setEnabled(false);
            jButtonC.setEnabled(true);
            ComboBoxRuta.setEnabled(false);
        } else {
            ActualizarMapa();
        }
    }//GEN-LAST:event_ButtonMoverseSiguienteActionPerformed

    private void ButtonModoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonModoFiltroActionPerformed
        if (ModoFiltro) {
            ModoFiltro = false;
            LabelModoFiltro.setText("Peor");
        } else {
            ModoFiltro = true;
            LabelModoFiltro.setText("Mejor");
        }
        if (enViaje) {
            ActualizarMapa();
        }
    }//GEN-LAST:event_ButtonModoFiltroActionPerformed

    private void jComboBoxDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDestinoActionPerformed
        jButtonC.setEnabled(true);
    }//GEN-LAST:event_jComboBoxDestinoActionPerformed

    private void jButtonPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPararActionPerformed
        relojSigue = false;
        jButtonParar.setEnabled(false);
        jButtonSeguir.setEnabled(true);
    }//GEN-LAST:event_jButtonPararActionPerformed

    private void jButtonSeguirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeguirActionPerformed
        relojSigue = true;
        jButtonParar.setEnabled(true);
        jButtonSeguir.setEnabled(false);
    }//GEN-LAST:event_jButtonSeguirActionPerformed

    private void jButtonSubirHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirHoraActionPerformed
        relojSigue = false;
        Hora = Hora.plusHours(1);
        jButtonParar.setEnabled(false);
        jButtonSeguir.setEnabled(true);
        LabelReloj.setText(Hora.toString());
    }//GEN-LAST:event_jButtonSubirHoraActionPerformed

    private void jButtonBajarHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajarHoraActionPerformed
        relojSigue = false;
        Hora = Hora.minusHours(1);
        jButtonParar.setEnabled(false);
        jButtonSeguir.setEnabled(true);
        LabelReloj.setText(Hora.toString());
    }//GEN-LAST:event_jButtonBajarHoraActionPerformed

    private void jButtonSubirMinutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirMinutoActionPerformed
        relojSigue = false;
        Hora = Hora.plusMinutes(1);
        jButtonParar.setEnabled(false);
        jButtonSeguir.setEnabled(true);
        LabelReloj.setText(Hora.toString());
    }//GEN-LAST:event_jButtonSubirMinutoActionPerformed

    private void jButtonBajarMinutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajarMinutoActionPerformed
        relojSigue = false;
        Hora = Hora.minusMinutes(1);
        jButtonParar.setEnabled(false);
        jButtonSeguir.setEnabled(true);
        LabelReloj.setText(Hora.toString());
    }//GEN-LAST:event_jButtonBajarMinutoActionPerformed

    public boolean RevisarSiLlego() {
        return Origen.equals(Destino);
    }

    public void ActualizarMapa() {
        int caso = CalcularCaso();
        if (caso >= 0 && caso <= 7) {
            ArbolB Arbol = new ArbolB(2);
            ArrayList<NodoRecorridoDeGrafo> Nodos = new ArrayList<>();
            ArrayList<NodoArbolB> NodosDelArbol = new ArrayList<>();
            NodosOrdenados = new ArrayList<>();
            visitados = new HashSet<>();
            ManejadorDelGrafo.encontrarCaminos(Origen, ManejadorDelGrafo.obtenerVertice(Origen, Grafo), Destino, Nodos, visitados, Grafo, null, Modo);
            if (Nodos.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No existen caminos posibles en la ruta seleccionada");
            } else {
                ManejadorDelCalculos.ConseguirNodosParaArbol(NodosDelArbol, Nodos, caso, Hora);
                for (int i = 0; i < NodosDelArbol.size(); i++) {
                    Arbol.insertar(NodosDelArbol.get(i));
                }
                Arbol.meterOrdenado(NodosOrdenados);
                if (caso == 6 || caso == 7) {
                    Graficador.SacarCadenarRutasPrueba(NodosOrdenados, Grafo, !ModoFiltro, Origen);
                } else {
                    Graficador.SacarCadenarRutasPrueba(NodosOrdenados, Grafo, ModoFiltro, Origen);
                }
                ActualizarImagenMapa();
                ActivarComboPaso(NodosDelArbol.size());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aún no has seleccionado un filtro");
        }

    }

    public void ActualizarImagenMapa() {
        try {
            BufferedImage img = ImageIO.read(new File("Mapa.png"));

            ImageIcon icon = new ImageIcon(img);
            LabelMapa.setIcon(icon);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public int CalcularCaso() {
        int selec = ComboBoxFiltro.getSelectedIndex();
        switch (selec) {
            case 0:
                if (Modo) {
                    return 1;
                } else {
                    return 2;
                }
            case 1:
                return 3;
            case 2:
                if (Modo) {
                    return 4;
                } else {
                    return 5;
                }
            case 3:
                if (Modo) {
                    return 6;
                } else {
                    return 7;
                }
            default:
                break;
        }
        return -1;
    }

    public void ActivarComboOrigen() {
        jComboBoxOrigen.removeAllItems();
        visitados = new HashSet<String>();
        visitados = ManejadorDelGrafo.SacarCadenas(Grafo);
        for (String valor : visitados) {
            jComboBoxOrigen.addItem(valor);
        }
    }

    public void ActivarComboPaso(int Tamaño) {
        ComboBoxRuta.removeAllItems();
        for (int i = 1; i < Tamaño + 1; i++) {
            ComboBoxRuta.addItem("Ruta " + i);
        }
        ButtonMoverseSiguiente.setEnabled(true);
        jButtonC.setEnabled(false);
        ComboBoxRuta.setEnabled(true);
        ComboBoxRuta.setSelectedIndex(ComboBoxRuta.getItemCount() - 1);
    }

    public void ActivarCombDestino(String seleccionado) {
        jComboBoxDestino.removeAllItems();
        visitados = new HashSet<String>();
        visitados = ManejadorDelGrafo.SacarCadenas(Grafo);
        for (String valor : visitados) {
            if (!valor.equals(seleccionado)) {
                jComboBoxDestino.addItem(valor);
            }
        }
    }

    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == h1) {
            if (relojSigue) {
                reloj();
                LabelReloj.setText(Hora.toString());
            }
            try {
                Thread.sleep(1000);
            } catch (InterruptedException error) {

            }
        }
    }

    private void reloj() {
        Calendar calendario = Calendar.getInstance();
        Date fechaHoraactual = new Date();
        calendario.setTime(fechaHoraactual);
        int min = Integer.valueOf(calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE));
        int hora = Integer.valueOf(calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY));
        Hora = LocalTime.of(hora, min);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonModoFiltro;
    private javax.swing.JButton ButtonMoverseSiguiente;
    private javax.swing.JComboBox<String> ComboBoxFiltro;
    private javax.swing.JComboBox<String> ComboBoxRuta;
    private javax.swing.JLabel LabelCantidad;
    private javax.swing.JLabel LabelMapa;
    private javax.swing.JLabel LabelModo;
    private javax.swing.JLabel LabelModoFiltro;
    private javax.swing.JLabel LabelReloj;
    private javax.swing.JPanel PanelMapa;
    private javax.swing.JButton jButtonAR;
    private javax.swing.JButton jButtonAT;
    private javax.swing.JButton jButtonBajarHora;
    private javax.swing.JButton jButtonBajarMinuto;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonCM;
    private javax.swing.JButton jButtonParar;
    private javax.swing.JButton jButtonSeguir;
    private javax.swing.JButton jButtonSubirHora;
    private javax.swing.JButton jButtonSubirMinuto;
    private javax.swing.JComboBox<String> jComboBoxDestino;
    private javax.swing.JComboBox<String> jComboBoxOrigen;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
